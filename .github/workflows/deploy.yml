name: CD Pipeline - DigitalOcean

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    branches: [main]
    types: [completed]

jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Option 1: Deploy to App Platform
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Deploy to App Platform
        run: |
          # Deploy backend
          doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }}

      # Option 2: Deploy to Droplet via SSH
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          passphrase: ${{ secrets.DIGITALOCEAN_SSH_PASSPHRASE }}
          script: |
            # Navigate to project directory
            cd /var/www/my-mern-app
            
            # Pull latest changes
            git pull origin main
            
            # Backend deployment
            cd Back-End
            npm ci
            # Update .env file with production values
            echo "PORT=9777" > .env
            echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
            echo "NODE_ENV=production" >> .env
            # Add other environment variables
            
            # Restart the Node.js application with PM2
            pm2 restart server || pm2 start server.js --name "ipm-backend"
            
            # Frontend deployment
            cd ../Front-End
            npm ci
            npm run build
            
            # If using Nginx to serve the React app
            # Copy build files to Nginx served directory
            cp -r build/* /var/www/html/
            
            # Reload Nginx if needed
            sudo systemctl reload nginx

      - name: Verify deployment
        run: |
          echo "Deployment to DigitalOcean completed"
          # Add health check or verification request
          curl -s ${{ secrets.BACKEND_URL }}/health || echo "Health check failed but continuing"